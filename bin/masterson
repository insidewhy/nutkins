#!/usr/bin/env ruby

require 'bundler/setup'
require 'masterson'
require 'moister'
require 'ostruct'

module Masterson::Command
  def self.run args
    config = nil
    command = nil

    Moister::SubcommandOptionParser.new do |op|
      op.banner = 'usage: masterson [global options] command [command options]'

      op.for_all do |op|
        op.on_tail '-h', '--help', 'show this help message' do
          puts op
          exit
        end
      end

      op.on '-p', '--project dir', 'override path to project', 'project_dir'

      op.subcommand 'build *paths', 'build docker image from dockerfile'
      op.subcommand 'create *paths', 'create container from image'
      op.subcommand 'delete *paths', 'delete container corresponding to image'
      op.subcommand 'delete-all', 'delete containers corresponding to all images'
      op.subcommand 'run path', 'run created container'
      op.subcommand 'shell path', 'run created container with shell hiding usual container output'
      op.subcommand 'exec path *cmd', 'execute a command in a running container'

      parsed_cfg = op.parse(args).to_h

      config = OpenStruct.new parsed_cfg[:config]
      command = parsed_cfg[:command]
    end

    unless command
      puts 'please supply a command, see --help'
      exit 1
    end

    masterson = Masterson::CloudManager.new(project_dir: config.project_dir)
    cmd_config = OpenStruct.new config[command]

    case command
    when 'build'
      masterson.build cmd_config.paths
    when 'create'
      masterson.create cmd_config.paths
    when 'delete'
      masterson.delete cmd_config.paths
    when 'delete-all'
      masterson.delete_all
    when 'run'
      masterson.run cmd_config.path
    when 'shell'
      masterson.shell cmd_config.path
    when 'exec'
      masterson.exec cmd_config.path, cmd_config.cmd
    end
  rescue RuntimeError => e
    puts e.to_s
  end
end

Masterson::Command::run ARGV
